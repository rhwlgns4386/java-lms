create table course (
    id bigint generated by default as identity,
    title varchar(255) not null,
    creater_id bigint not null,
    created_at timestamp not null,
    updated_at timestamp,
    primary key (id)
);

create table ns_user (
    id bigint generated by default as identity,
    user_id varchar(20) not null,
    password varchar(20) not null,
    name varchar(20) not null,
    email varchar(50),
    created_at timestamp not null,
    updated_at timestamp,
    primary key (id)
);

create table question (
    id bigint generated by default as identity,
    created_at timestamp not null,
    updated_at timestamp,
    contents clob,
    deleted boolean not null,
    title varchar(100) not null,
    writer_id bigint,
    primary key (id)
);

create table answer (
    id bigint generated by default as identity,
    created_at timestamp not null,
    updated_at timestamp,
    contents clob,
    deleted boolean not null,
    question_id bigint,
    writer_id bigint,
    primary key (id)
);

create table delete_history (
    id bigint not null,
    content_id bigint,
    content_type varchar(255),
    created_date timestamp,
    deleted_by_id bigint,
    primary key (id)
);

create table session_image (
    id bigint generated by default as identity,
    size int not null,
    type varchar(5) not null,
    width double precision not null,
    height double precision not null,
    primary key (id)
);

create table session (
    id bigint generated by default as identity,
    image_id bigint,
    start_date timestamp not null,
    end_date timestamp not null,
    type varchar(5) not null,
    maximum_enrollment int not null,
    tuition int not null,
    status varchar(11) not null,
    course_id bigint,
    created_at timestamp not null,
    updated_at timestamp,
    primary key (id),
    foreign key (image_id) references session_image (id),
    foreign key (course_id) references course (id)
);

create table session_registration_info (
    session_id bigint,
    user_id bigint,
    created_at timestamp not null,
    updated_at timestamp,
    primary key (session_id, user_id),
    foreign key (session_id) references session (id),
    foreign key (user_id) references ns_user (id)
);

create table session_cover_image (
    session_id bigint,
    cover_image_id bigint,
    primary key (session_id, cover_image_id),
    foreign key (session_id) references session (id),
    foreign key (cover_image_id) references cover_image (id)
);


-- 요구사항 변경에 따른 추가 쿼리
-- 1. session_image 테이블명 cover_image로 변경
alter table session_image rename to cover_image;
-- 2. session 테이블에 recruitment_status 컬럼 추가
alter table session add column recruitment_status varchar(20) not null default 'NOT_RECRUITING';
-- 3. 기존 강의들은 신청하면 다 수강했기 때문에 기존 없던 값들은 APPROVED로 설정
alter table session_registration_info add column registration_status varchar(20) not null default 'APPROVED';
-- 4. 기존 세션 테이블 내 이미지 정보를 session_cover_image 테이블로 이동
insert into session_cover_image (session_id, cover_image_id)
select id as session_id, image_id as cover_image_id
from session;
-- 5. 기존 세션 테이블의 이미지 정보 컬럼 삭제
alter table session drop constraint fk_session_image_id;
alter table session drop column image_id;